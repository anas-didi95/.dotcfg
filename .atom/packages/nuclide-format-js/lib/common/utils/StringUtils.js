'use strict';

/*
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the license found in the LICENSE file in
 * the root directory of this source tree.
 *
 * 
 */

function capitalize(word) {
  if (word.length === 0) {
    return word;
  }
  return word.charAt(0).toUpperCase() + word.slice(1);
}

/**
 * Sorting method that works like String::localCompare, but in Node.js as well.
 */
function compareStrings(one_, two_) {
  var one = one_ || '';
  var two = two_ || '';
  var oneLC = one.toLowerCase();
  var twoLC = two.toLowerCase();
  return one !== two && oneLC === twoLC ? simpleCompare(two, one // lowercase first
  ) : simpleCompare(oneLC, twoLC); // alphabetical ascending
}

function simpleCompare(one, two) {
  return one < two ? -1 : one > two ? 1 : 0;
}

function compareStringsCapitalsLast(one, two) {
  var byCapitalization = Number(isCapitalized(one || '')) - Number(isCapitalized(two || ''));
  return byCapitalization !== 0 ? byCapitalization : compareStrings(one, two);
}

function isCapitalized(name) {
  return name.length > 0 && name.charAt(0).toLowerCase() !== name.charAt(0);
}

function isLowerCase(name) {
  return name.toLowerCase() === name;
}

module.exports = {
  capitalize: capitalize,
  compareStrings: compareStrings,
  compareStringsCapitalsLast: compareStringsCapitalsLast,
  isCapitalized: isCapitalized,
  isLowerCase: isLowerCase
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vdXRpbHMvU3RyaW5nVXRpbHMuanMiXSwibmFtZXMiOlsiY2FwaXRhbGl6ZSIsIndvcmQiLCJsZW5ndGgiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwiY29tcGFyZVN0cmluZ3MiLCJvbmVfIiwidHdvXyIsIm9uZSIsInR3byIsIm9uZUxDIiwidG9Mb3dlckNhc2UiLCJ0d29MQyIsInNpbXBsZUNvbXBhcmUiLCJjb21wYXJlU3RyaW5nc0NhcGl0YWxzTGFzdCIsImJ5Q2FwaXRhbGl6YXRpb24iLCJOdW1iZXIiLCJpc0NhcGl0YWxpemVkIiwibmFtZSIsImlzTG93ZXJDYXNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7OztBQVVBLFNBQVNBLFVBQVQsQ0FBb0JDLElBQXBCLEVBQTBDO0FBQ3hDLE1BQUlBLEtBQUtDLE1BQUwsS0FBZ0IsQ0FBcEIsRUFBdUI7QUFDckIsV0FBT0QsSUFBUDtBQUNEO0FBQ0QsU0FBT0EsS0FBS0UsTUFBTCxDQUFZLENBQVosRUFBZUMsV0FBZixLQUErQkgsS0FBS0ksS0FBTCxDQUFXLENBQVgsQ0FBdEM7QUFDRDs7QUFFRDs7O0FBR0EsU0FBU0MsY0FBVCxDQUF3QkMsSUFBeEIsRUFBdUNDLElBQXZDLEVBQThEO0FBQzVELE1BQU1DLE1BQU1GLFFBQVEsRUFBcEI7QUFDQSxNQUFNRyxNQUFNRixRQUFRLEVBQXBCO0FBQ0EsTUFBTUcsUUFBUUYsSUFBSUcsV0FBSixFQUFkO0FBQ0EsTUFBTUMsUUFBUUgsSUFBSUUsV0FBSixFQUFkO0FBQ0EsU0FBT0gsUUFBUUMsR0FBUixJQUFlQyxVQUFVRSxLQUF6QixHQUNIQyxjQUFjSixHQUFkLEVBQW1CRCxHQUFuQixDQUF3QjtBQUF4QixHQURHLEdBRUhLLGNBQWNILEtBQWQsRUFBcUJFLEtBQXJCLENBRkosQ0FMNEQsQ0FPM0I7QUFDbEM7O0FBRUQsU0FBU0MsYUFBVCxDQUF1QkwsR0FBdkIsRUFBb0NDLEdBQXBDLEVBQXlEO0FBQ3ZELFNBQU9ELE1BQU1DLEdBQU4sR0FBWSxDQUFDLENBQWIsR0FBaUJELE1BQU1DLEdBQU4sR0FBWSxDQUFaLEdBQWdCLENBQXhDO0FBQ0Q7O0FBRUQsU0FBU0ssMEJBQVQsQ0FBb0NOLEdBQXBDLEVBQWtEQyxHQUFsRCxFQUF3RTtBQUN0RSxNQUFNTSxtQkFDSkMsT0FBT0MsY0FBY1QsT0FBTyxFQUFyQixDQUFQLElBQW1DUSxPQUFPQyxjQUFjUixPQUFPLEVBQXJCLENBQVAsQ0FEckM7QUFFQSxTQUFPTSxxQkFBcUIsQ0FBckIsR0FDSEEsZ0JBREcsR0FFSFYsZUFBZUcsR0FBZixFQUFvQkMsR0FBcEIsQ0FGSjtBQUdEOztBQUVELFNBQVNRLGFBQVQsQ0FBdUJDLElBQXZCLEVBQThDO0FBQzVDLFNBQ0VBLEtBQUtqQixNQUFMLEdBQWMsQ0FBZCxJQUNBaUIsS0FBS2hCLE1BQUwsQ0FBWSxDQUFaLEVBQWVTLFdBQWYsT0FBaUNPLEtBQUtoQixNQUFMLENBQVksQ0FBWixDQUZuQztBQUlEOztBQUVELFNBQVNpQixXQUFULENBQXFCRCxJQUFyQixFQUE0QztBQUMxQyxTQUFPQSxLQUFLUCxXQUFMLE9BQXVCTyxJQUE5QjtBQUNEOztBQUVERSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2Z0Qix3QkFEZTtBQUVmTSxnQ0FGZTtBQUdmUyx3REFIZTtBQUlmRyw4QkFKZTtBQUtmRTtBQUxlLENBQWpCIiwiZmlsZSI6IlN0cmluZ1V0aWxzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBsaWNlbnNlIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgaW5cbiAqIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKi9cblxuZnVuY3Rpb24gY2FwaXRhbGl6ZSh3b3JkOiBzdHJpbmcpOiBzdHJpbmcge1xuICBpZiAod29yZC5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gd29yZDtcbiAgfVxuICByZXR1cm4gd29yZC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHdvcmQuc2xpY2UoMSk7XG59XG5cbi8qKlxuICogU29ydGluZyBtZXRob2QgdGhhdCB3b3JrcyBsaWtlIFN0cmluZzo6bG9jYWxDb21wYXJlLCBidXQgaW4gTm9kZS5qcyBhcyB3ZWxsLlxuICovXG5mdW5jdGlvbiBjb21wYXJlU3RyaW5ncyhvbmVfOiA/c3RyaW5nLCB0d29fOiA/c3RyaW5nKTogbnVtYmVyIHtcbiAgY29uc3Qgb25lID0gb25lXyB8fCAnJztcbiAgY29uc3QgdHdvID0gdHdvXyB8fCAnJztcbiAgY29uc3Qgb25lTEMgPSBvbmUudG9Mb3dlckNhc2UoKTtcbiAgY29uc3QgdHdvTEMgPSB0d28udG9Mb3dlckNhc2UoKTtcbiAgcmV0dXJuIG9uZSAhPT0gdHdvICYmIG9uZUxDID09PSB0d29MQ1xuICAgID8gc2ltcGxlQ29tcGFyZSh0d28sIG9uZSkgLy8gbG93ZXJjYXNlIGZpcnN0XG4gICAgOiBzaW1wbGVDb21wYXJlKG9uZUxDLCB0d29MQyk7IC8vIGFscGhhYmV0aWNhbCBhc2NlbmRpbmdcbn1cblxuZnVuY3Rpb24gc2ltcGxlQ29tcGFyZShvbmU6IHN0cmluZywgdHdvOiBzdHJpbmcpOiBudW1iZXIge1xuICByZXR1cm4gb25lIDwgdHdvID8gLTEgOiBvbmUgPiB0d28gPyAxIDogMDtcbn1cblxuZnVuY3Rpb24gY29tcGFyZVN0cmluZ3NDYXBpdGFsc0xhc3Qob25lOiA/c3RyaW5nLCB0d286ID9zdHJpbmcpOiBudW1iZXIge1xuICBjb25zdCBieUNhcGl0YWxpemF0aW9uID1cbiAgICBOdW1iZXIoaXNDYXBpdGFsaXplZChvbmUgfHwgJycpKSAtIE51bWJlcihpc0NhcGl0YWxpemVkKHR3byB8fCAnJykpO1xuICByZXR1cm4gYnlDYXBpdGFsaXphdGlvbiAhPT0gMFxuICAgID8gYnlDYXBpdGFsaXphdGlvblxuICAgIDogY29tcGFyZVN0cmluZ3Mob25lLCB0d28pO1xufVxuXG5mdW5jdGlvbiBpc0NhcGl0YWxpemVkKG5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICByZXR1cm4gKFxuICAgIG5hbWUubGVuZ3RoID4gMCAmJlxuICAgIG5hbWUuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgIT09IG5hbWUuY2hhckF0KDApXG4gICk7XG59XG5cbmZ1bmN0aW9uIGlzTG93ZXJDYXNlKG5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICByZXR1cm4gbmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY2FwaXRhbGl6ZSxcbiAgY29tcGFyZVN0cmluZ3MsXG4gIGNvbXBhcmVTdHJpbmdzQ2FwaXRhbHNMYXN0LFxuICBpc0NhcGl0YWxpemVkLFxuICBpc0xvd2VyQ2FzZSxcbn07XG4iXX0=